%md
We'll define the following star schema:
* dim_date
* dim_store
* dim_product
* dim_customer

The first step is to create a Delta Tables in Unity Catalog.

%sql
CREATE CATALOG IF NOT EXISTS US_Stores;
USE CATALOG US_Stores;
CREATE SCHEMA IF NOT EXISTS Sales_DW;
USE SCHEMA Sales_DW;

-- Store dimension
CREATE OR REPLACE TABLE dim_store(
  store_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  business_key STRING,
  name STRING,
  email STRING,
  city STRING,
  address STRING,
  phone_number STRING,
  created_date TIMESTAMP,
  updated_date TIMESTAMP,
  start_at TIMESTAMP,
  end_at TIMESTAMP
);

-- Product dimension
CREATE OR REPLACE TABLE dim_product(
  product_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  type STRING,
  SKU STRING,
  name STRING,
  description STRING,
  sale_price DOUBLE,
  regular_price DOUBLE,
  created_date TIMESTAMP,
  updated_date TIMESTAMP,
  start_at TIMESTAMP,
  end_at TIMESTAMP
);

-- Customer dimension
CREATE OR REPLACE TABLE dim_customer(
  customer_id BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
  name STRING,
  email STRING,
  address STRING,
  created_date TIMESTAMP,
  updated_date TIMESTAMP,
  start_at TIMESTAMP,
  end_at TIMESTAMP
);

-- Date dimension
CREATE OR REPLACE TABLE dim_date(
  date_id BIGINT PRIMARY KEY,
  date_num INT,
  date STRING,
  year_month_number INT,
  calendar_quarter STRING,
  month_num INT,
  month_name STRING,
  created_date TIMESTAMP,
  updated_date TIMESTAMP,
  start_at TIMESTAMP,
  end_at TIMESTAMP
);

-- Fact Sales
CREATE OR REPLACE TABLE fact_sales(  
  transaction_id BIGINT PRIMARY KEY,
  date_id BIGINT NOT NULL CONSTRAINT dim_date_fk FOREIGN KEY REFERENCES dim_date,
  customer_id BIGINT NOT NULL CONSTRAINT dim_customer_fk FOREIGN KEY REFERENCES dim_customer,
  product_id BIGINT NOT NULL CONSTRAINT dim_product_fk FOREIGN KEY REFERENCES dim_product,
  store_id BIGINT NOT NULL CONSTRAINT dim_store_fk FOREIGN KEY REFERENCES dim_store,
  store_business_key STRING,
  sales_amount DOUBLE
);


%sql
-- DBTITLE 1,Add additional constraints  
-- Add constraint to dim_store to make sure column store_id is between 1 and 9998
ALTER TABLE US_Stores.Sales_DW.dim_store ADD CONSTRAINT valid_store_id CHECK (store_id > 0 and store_id < 9999);

-- Add constraint to fact_sales to make sure column sales_amount has a valid value
ALTER TABLE US_Stores.Sales_DW.fact_sales ADD CONSTRAINT valid_sales_amount CHECK (sales_amount > 0);


%sql
-- Insert sample data for dimension tables
INSERT INTO
  dim_store (business_key, name, email, city, address, phone_number, created_date, updated_date, start_at, end_at)
VALUES
  ("PER01", "Perth CBD", "yhernandez@example.com", "Perth", "Level 2 95 Jorge Vale St. Gary, NT, 2705", "08-9854-6006", "2021-10-01 00:00:00", "2021-10-01 00:00:00", "2021-10-01 00:00:00", NULL),
  ("BNE02", "Brisbane Airport" , "castillojoseph@example.net", "Brisbane", "6 Ware Copse Doughertystad, NSW, 2687", "0425.061.371", "2021-10-01 00:00:00", "2021-10-01 00:00:00", "2021-10-01 00:00:00", NULL);
  
INSERT INTO
  dim_product (type, SKU, name, description, sale_price, regular_price, created_date, updated_date, start_at, end_at)
VALUES 
  ("variable", "vneck-tee", "V-Neck T-Shirt", "This is a variable product of type vneck-tee", "60.00", "50.00", "2021-10-01 00:00:00", "2021-10-01 00:00:00", "2021-10-01 00:00:00", NULL),
  ("simple", "hoodie", "Hoodie", "This is a simple product of type hoodie", "90.00", "79.00", "2021-10-01 00:00:00", "2021-10-01 00:00:00", "2021-10-01 00:00:00", NULL);
  
INSERT INTO
  dim_customer (name, email, address, created_date, updated_date, start_at, end_at)
VALUES 
  ("Stephanie Brown", "howardalejandra@example.net", "8273 Jerry Pine East Angela, ID 50196", "2021-10-01 00:00:00", "2021-10-01 00:00:00", "2021-10-01 00:00:00", NULL),
  ("Christopher Cooper", "campbelljohn@example.net", "8273 Jerry Pine East Angela, ID 50196", "2021-10-01 00:00:00", "2021-10-01 00:00:00", "2021-10-01 00:00:00", NULL),
  ("Daniel White", "colonricardo@example.net", "945 Goodwin Plain Suite 312 Dylanmouth, NY 14319", "2021-10-01 00:00:00", "2021-10-01 00:00:00", "2021-10-01 00:00:00", NULL);
  
INSERT INTO
  dim_date (date_id, date_num, date, year_month_number, calendar_quarter, month_num, month_name, created_date, updated_date, start_at, end_at)
VALUES 
  (20211001, 20211001, "2021-10-01", 202110, "Qtr 4", 10, "October", "2021-10-01 00:00:00", "2021-10-01 00:00:00", "2021-10-01 00:00:00", NULL),
  (20211002, 20211002, "2021-10-02", 202110, "Qtr 4", 10, "October", "2021-10-01 00:00:00", "2021-10-01 00:00:00", "2021-10-01 00:00:00", NULL),
  (20211003, 20211003, "2021-10-03", 202110, "Qtr 4", 10, "October", "2021-10-01 00:00:00", "2021-10-01 00:00:00", "2021-10-01 00:00:00", NULL);


%sql
-- Insert sample data for sales fact table 
INSERT INTO
  fact_sales (transaction_id, date_id, customer_id, product_id, store_id, store_business_key, sales_amount)
VALUES
  (10001, 20211001, 1, 1, 1, "PER01", 50.00),
  (10002, 20211002, 2, 1, 2, "BNE02", 79.00),
  (10003, 20211002, 1, 2, 2, "BNE02", 79.00),
  (10004, 20211003, 2, 1, 2, "BNE02", 60.00),
  (10005, 20211003, 3, 2, 1, "PER01", 79.00);


%sql
-- DBTITLE 1,Optimize table using ZORDER (SHOULD REALLY BE LIQUID CLUSTERING)
-- Optimise fact_sales table by customer_id and product_id for better query and join performance
OPTIMIZE US_Stores.Sales_DW.fact_sales 
ZORDER BY (customer_id, product_id); 


%sql
-- collect stats for all columns for better performance
ANALYZE TABLE US_Stores.Sales_DW.fact_sales COMPUTE STATISTICS FOR ALL COLUMNS;


%sql
SELECT * FROM fact_sales
  INNER JOIN dim_date     USING (date_id)
  INNER JOIN dim_product  USING (product_id)
  INNER JOIN dim_customer USING (customer_id)
  INNER JOIN dim_store    USING (store_id)


%sql
-- DBTITLE 1,Updating sales amount from 79 to 89. 
UPDATE fact_sales 
SET sales_amount = '89.00' 
WHERE product_id = 2

-- COMMAND ----------

SELECT * FROM fact_sales

-- COMMAND ----------

-- DBTITLE 1,DELETE works even if underlying data is on external files 
DELETE FROM fact_sales 
WHERE transaction_id = 10001

-- COMMAND ----------

-- DBTITLE 1,Delta - Time Travel- ACID compliant Delta Log
DESCRIBE HISTORY fact_sales

-- COMMAND ----------

-- DBTITLE 1,Current version of tables has sales amount of 89 for product ID = 2
SELECT * FROM fact_sales
WHERE product_id = 2

-- COMMAND ----------

-- DBTITLE 1,Older version of tables still has sales amount of 79 for product ID = 2
SELECT * FROM fact_sales VERSION as of 5
WHERE product_id = 2



%sql
-- DBTITLE 1,MERGE Operation for ETL ( used in SCD Type 1, SCD Type 2) 
MERGE INTO fact_sales F USING (
  SELECT
    *
  FROM
    FACT_SALES VERSION AS OF 5
) AS O ON F.product_id = O.product_id
AND F.transaction_id = O.transaction_id
WHEN MATCHED THEN
UPDATE
SET
  F.sales_amount = O.sales_amount --WHEN NOT MATCHED THEN..


-- DBTITLE 1,Updated sales amount of 89 to 79 for product_id = 2
SELECT * FROM fact_sales
WHERE product_id = 2
